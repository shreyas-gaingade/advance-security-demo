# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '35 4 * * 2'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: python
            build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Ensure full history is available for git diff operations

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'Manual build mode selected. Add your build commands here.'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    - name: Check for forbidden strings
      run: |
        echo "Scanning for forbidden strings..."
        forbidden_patterns=("Infosys Limited" "Infosys Ltd." "@infosys.com")
        
        # Keep track if any forbidden strings were found
        found_forbidden=false

        # Determine the files changed based on the event type
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
        elif [[ "${{ github.event_name }}" == "push" ]]; then
          if [[ -n "${{ github.event.before }}" && "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]]; then
            files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          else
            files=$(git diff --name-only HEAD~1 HEAD)
          fi
        else
          echo "Warning: Running on an unsupported event type for incremental diff. Checking all files."
          files=$(git ls-files)
        fi
        
        if [ -z "$files" ]; then
          echo "No files changed in this event to check for forbidden strings."
          echo "‚úÖ No forbidden strings found."
          exit 0
        fi

        for file in $files; do
          if [ -f "$file" ]; then
            for pattern in "${forbidden_patterns[@]}"; do
              if grep -q "$pattern" "$file"; then
                echo "‚ùå Forbidden pattern '$pattern' found in file: $file"
                found_forbidden=true # Mark that a forbidden string was found
              fi
            done
          fi
        done
        
        if $found_forbidden; then
          echo "üõë Workflow will fail because forbidden strings were found."
          exit 1 # This line will now cause the workflow to fail!
        else
          echo "‚úÖ No forbidden strings found."
        fi
