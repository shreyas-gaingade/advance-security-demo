# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '35 4 * * 2'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'Manual build mode selected. Add your build commands here.'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  scan_forbidden_strings:
    name: Scan for Forbidden Strings
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check for forbidden strings
      run: |
        echo "Scanning for forbidden strings..."
        forbidden_patterns=("Infosys Limited" "Infosys Ltd." "@infosys.com")
        files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
        for file in $files; do
          if [ -f "$file" ]; then
            for pattern in "${forbidden_patterns[@]}"; do
              if grep -q "$pattern" "$file"; then
                echo "❌ Forbidden pattern '$pattern' found in file: $file"
                exit 1
              fi
            done
          fi
        done
        echo "✅ No forbidden strings found."
